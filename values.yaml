ClusterName: "unknown"

## OpenTelemetry Collector Endpoint
OpenTelemetryCollector:
  GRPC: "0.0.0.0:4317"
  HTTP: "0.0.0.0:4318"

##################################
## Authentication Configuration ##
##################################
Auth:
  # Endpoint - the APIServer address provided in OpsRamp Portal to which auth token request is to be made
  Endpoint: ""
  # Key - authentication key provided in OpsRamp Portal
  Key: ""
  # Secret - authentication Secret provided in OpsRamp Portal
  Secret: ""
  # TenantId - tenant/client id to which the traces are to be posted
  TenantId: ""

Endpoints:
  Metrics: ""
  Logs: ""
  Traces: ""

cert-manager:
  enabled: false
  installCRDs: true
  namespace: cert-manager

trace-proxy:
  fullnameOverride: "proxy"
  replicaCount: 1
  image:
    repository: ghcr.io/lokeshopsramp/trace-proxy
    pullPolicy: "IfNotPresent"
    tag: "arm"
  config:
    OpsrampAPI: ""
    #########################
    ## Proxy Configuration ##
    #########################
    ProxyConfiguration:
      # Protocol accepts http and https
      Protocol: "http"
      # Host takes the proxy server address
      Host: ""
      # Port takes the proxy server port
      Port: 3128
      # UserName takes the proxy username
      Username: ""
      # Password takes the proxy password
      Password: ""

    ##################################
    ## Authentication Configuration ##
    ##################################
    AuthConfiguration:
      # Endpoint - the APIServer address provided in OpsRamp Portal to which auth token request is to be made
      Endpoint: ""
      # Key - authentication key provided in OpsRamp Portal
      Key: ""
      # Secret - authentication Secret provided in OpsRamp Portal
      Secret: ""
      # TenantId - tenant/client id to which the traces are to be posted
      TenantId: ""

    LogsEndpoint: ""

    MetricsConfig:
      # Enable specifies whether the metrics are supposed to be collected and exported to OpsRamp
      Enable: true
      OpsRampAPI: ""


opentelemetry-operator:
  admissionWebhooks:
    timeoutSeconds: 10
    certManager:
      enabled: true

  ## Provide OpenTelemetry Operator manager container image and resources.
  ##
  manager:
    image:
      repository: ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator
      tag: ""
    collectorImage:
      repository: otel/opentelemetry-collector-contrib
      tag: 0.96.0
    opampBridgeImage:
      repository: ""
      tag: ""
    targetAllocatorImage:
      repository: ""
      tag: ""
    autoInstrumentationImage:
      java:
        repository: ""
        tag: ""
      nodejs:
        repository: ""
        tag: ""
      python:
        repository: ""
        tag: ""
      dotnet:
        repository: ""
        tag: ""
      # The Go instrumentaiton support in the operator is disabled by default.
      # To enable it, use the operator.autoinstrumentation.go feature gate.
      go:
        repository: ""
        tag: ""
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

scrape_configs:
  # Collect node metrics
  - job_name: kubernetes-pods
    scrape_interval: 30s
    kubernetes_sd_configs:
      - role: pod
        selectors:
          - role: pod
            # only scrape data from pods running on the same node as collector
            field: "spec.nodeName=$K8S_NODE_NAME"
    relabel_configs:
      - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
        action: keep
        regex: true
      - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow ]
        action: drop
        regex: true
      - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scheme ]
        action: replace
        regex: (https?)
        target_label: __scheme__
      - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        # NOTE: otel collector uses env var replacement. $$ is used as a literal $.
        replacement: $$1:$$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
        replacement: __param_$$1
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [ __meta_kubernetes_namespace ]
        action: replace
        target_label: namespace
      - source_labels: [ __meta_kubernetes_pod_name ]
        action: replace
        target_label: pod
      - source_labels: [ __meta_kubernetes_pod_phase ]
        regex: Pending|Succeeded|Failed|Completed
        action: drop
      - action: replace
        source_labels: [ __meta_kubernetes_pod_label_app_kubernetes_io_name ]
        target_label: job
  - job_name: node-exporter
    scrape_interval: 30s
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: replace
        regex: "(.*)"
        replacement: "$1"
        separator: ";"
        source_labels:
          - job
        target_label: __tmp_prometheus_job_name
    static_configs:
      - targets:
          - ${K8S_NODE_NAME}:9100
  # We still need to scrape kubelet's CAdvisor which isn't supported
  - authorization:
      credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      type: Bearer
    follow_redirects: true
    honor_labels: true
    honor_timestamps: true
    job_name: kubelet
    kubernetes_sd_configs:
      - follow_redirects: true
        role: node
        # selectors:
        # - role: node
        #   # only scrape data from pods running on the same node as collector
        #   field: "metadata.name=$K8S_NODE_NAME"
    metric_relabel_configs:
      - action: drop
        regex: container_cpu_(load_average_10s|system_seconds_total|user_seconds_total)
        replacement: "$1"
        separator: ";"
        source_labels:
          - __name__
      - action: drop
        regex: container_fs_(io_current|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
        replacement: "$1"
        separator: ";"
        source_labels:
          - __name__
      - action: drop
        regex: container_memory_(mapped_file|swap)
        replacement: "$1"
        separator: ";"
        source_labels:
          - __name__
      - action: drop
        regex: container_(file_descriptors|tasks_state|threads_max)
        replacement: "$1"
        separator: ";"
        source_labels:
          - __name__
      - action: drop
        regex: container_spec.*
        replacement: "$1"
        separator: ";"
        source_labels:
          - __name__
      - action: drop
        regex: ".+;"
        replacement: "$1"
        separator: ";"
        source_labels:
          - id
          - pod
    metrics_path: "/metrics/cadvisor"
    relabel_configs:
      - action: replace
        regex: "(.*)"
        replacement: "$1"
        separator: ";"
        source_labels:
          - job
        target_label: __tmp_prometheus_job_name
      - action: replace
        replacement: "kubelet"
        target_label: job
      - action: replace
        regex: "(.*)"
        replacement: "${1}"
        separator: ";"
        source_labels:
          - __meta_kubernetes_node_name
        target_label: node
      - action: replace
        regex: "(.*)"
        replacement: https-metrics
        separator: ";"
        target_label: endpoint
      - action: replace
        regex: "(.*)"
        replacement: "$1"
        separator: ";"
        source_labels:
          - __metrics_path__
        target_label: metrics_path
      - action: hashmod
        modulus: 1
        regex: "(.*)"
        replacement: "$1"
        separator: ";"
        source_labels:
          - __address__
        target_label: __tmp_hash
      - action: keep
        regex: "$(SHARD)"
        replacement: "$1"
        separator: ";"
        source_labels:
          - __tmp_hash
    scheme: https
    scrape_interval: 15s
    scrape_timeout: 10s
    tls_config:
      ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
      insecure_skip_verify: true



