apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: {{ include "opsramp-cloud-stack.fullname" . }}-logs
  labels:
    {{- include "opsramp-cloud-stack.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  {{ if eq .Values.logsCollector.enabled true }}
  mode: daemonset
  {{ else }}
  mode: deployment
  replicas: 0
  {{ end }}
  volumeMounts:
    - mountPath: /var/log
      name: varlog
      readOnly: true
    - mountPath: /var/lib/docker/containers
      name: varlibdockercontainers
      readOnly: true
  volumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
  env:
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: K8S_NODE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: K8S_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: K8S_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: K8S_POD_UID
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.uid
    - name: K8S_POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: "k8s.cluster.name={{ default "unknown" .Values.ClusterName }},k8s.node.name=$(K8S_NODE_NAME)"
  config: |
    {{- tpl (toYaml .Values.logsCollector.config ) . | nindent 4 }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "opsramp-cloud-stack.fullname" . }}-logs
rules:
  - apiGroups: [ "" ]
    resources:
      - events
      - namespaces
      - namespaces/status
      - nodes
      - nodes/stats
      - nodes/spec
      - nodes/proxy
      - nodes/metrics
      - services
      - resourcequotas
      - replicationcontrollers
      - replicationcontrollers/status
      - endpoints
      - persistentvolumes
      - persistentvolumeclaims
      - pods
      - pods/status
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "monitoring.coreos.com" ]
    resources:
      - servicemonitors
      - podmonitors
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "discovery.k8s.io" ]
    resources:
      - endpointslices
    verbs: [ "get", "list", "watch" ]
  - nonResourceURLs: [ "/metrics", "/metrics/cadvisor" ]
    verbs: [ "get" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "opsramp-cloud-stack.fullname" . }}-logs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "opsramp-cloud-stack.fullname" . }}-logs
subjects:
  - kind: ServiceAccount
    # quirk of the Operator
    name: "{{ include "opsramp-cloud-stack.fullname" . }}-logs-collector"
    namespace: {{ $.Release.Namespace }}